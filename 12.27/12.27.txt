选项api和组合api的优缺点，和不同

选项 API
	  优点：易于学习和使用，写代码的位置已经约定好了

        缺点：代码组织性差，相似的逻辑代码不便于复用，逻辑复杂代码多了不好阅读。

        虽然提供了 mixins 用来封装逻辑，但是出现数据函数覆盖的概率很大，不好维护

组合 API
	 优点：功能逻辑复杂繁多情况下，各个功能逻辑代码组织再一起，便于阅读和维护

        缺点：需要有良好的代码组织能力和拆分逻辑能力 （在 vue3 中也可以支持 vue2 选项API 写法）

选项式和组合式 API 的关系

        组合式 API 的目的是增强，不是取代选项式 API , vue3 对两种 API 都支持

        简单的场景使用选项式 API 更加简单方便

        需要强烈支持 TS 的项目首选组合式 API

        需要大量逻辑复用的场景首选组合式 API

        伴随着新到的vue3，我们编写组件的书写方式也发生了变化。

        除了底层的更新，编写方式的改变 或许才是我们最能直观感受到的。

        其实就是vue3多了一种名为组合式api(composables api)的写法，相对应的式传统选项式api(options api)

        组合式api简单来说就是使用setup方式编写组件